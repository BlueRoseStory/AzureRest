{
	"info": {
		"_postman_id": "2fe72e7e-f203-47af-a2a5-cfa4c502514e",
		"name": "SysDoc-Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create Book",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();\r",
							"\r",
							"pm.environment.set(\"book-id-test\", jsonData.id);\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Response Id checks\", () => {\r",
							"  pm.expect(jsonData.id).to.not.be.empty;\r",
							"  // pm.expect(responseJson.id).to.equal(pm.globals.get(\"bookId\"));\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "sysdoc-owner-id",
						"type": "text",
						"value": "{{owner-id}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"title\": \"{{$randomJobTitle}}\",\r\n    \"description\": \"{{$randomBs}}\",\r\n    \"tags\": \"{{$randomLoremWords}}\"\r\n}",
					"options": {
						"raw": {
							"language": "text"
						}
					}
				},
				"url": {
					"raw": "{{hostUrl}}/api/books?code={{hostKey}}",
					"host": [
						"{{hostUrl}}"
					],
					"path": [
						"api",
						"books"
					],
					"query": [
						{
							"key": "code",
							"value": "{{hostKey}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Book by Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Examples from Youtube video\r",
							"// https://github.com/DannyDainton/post-con-2019-workshop\r",
							"const jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response Id checks\", () => {\r",
							"  pm.expect(jsonData.id).to.not.be.empty;\r",
							"  // pm.expect(responseJson.id).to.equal(pm.globals.get(\"bookId\"));\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const moment = require('moment');\r",
							"\r",
							"pm.globals.set(\"someDate\", moment().format(\"MM/DD/YYYY\"));\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "sysdoc-owner-id",
						"type": "text",
						"value": "{{owner-id}}"
					}
				],
				"url": {
					"raw": "{{hostUrl}}/api/books/{{book-id-test}}?code={{hostKey}}",
					"host": [
						"{{hostUrl}}"
					],
					"path": [
						"api",
						"books",
						"{{book-id-test}}"
					],
					"query": [
						{
							"key": "code",
							"value": "{{hostKey}}"
						}
					]
				},
				"description": "## GET /books/{bookId}"
			},
			"response": []
		}
	]
}